version: "4"

name: inventory

services:
  inventory_service:
    build:
      context: .
      dockerfile: dockerfile
    ports:
      - "8002:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_TOPIC_INVENTORY_UPDATED: ${KAFKA_TOPIC_INVENTORY_UPDATED}
      KAFKA_TOPIC_PRODUCT_CREATED: ${KAFKA_TOPIC_PRODUCT_CREATED}
      KAFKA_TOPIC_PRODUCT_UPDATED: ${KAFKA_TOPIC_PRODUCT_UPDATED}
      KAFKA_TOPIC_PRODUCT_DELETED: ${KAFKA_TOPIC_PRODUCT_DELETED}
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - bridge

  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mashood
      POSTGRES_DB: mashood_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bridge

  kafka:
    image: confluentinc/cp-kafka:5.5.1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    healthcheck:
      test: ["CMD-SHELL", "kafka-broker-healthy"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bridge

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    healthcheck:
      test: ["CMD-SHELL", "zookeeper-healthy"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bridge

networks:
  default:
    driver: bridge